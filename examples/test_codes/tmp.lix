prop is_group(s set, mul fn(s, s)s, inv fn(s)s, e s):
    forall x s, y s, z s:
        mul(mul(x, y), z) = mul(x, mul(y, z))
    forall x s:
        mul(x, inv(x)) = e
        mul(inv(x), x) = e

fn inverse(x R)R:
    inverse(x) + x = 0

forall x Z:
    inverse(x) + x =0
    x + inverse(x) = 0
    inverse(x) = -x
    -x $in Z
    inverse(x) $in Z

$in(+, fn(Z, Z)Z)
$in(inverse, fn(Z)Z)
$is_group(Z, +, inverse, 0)
$is_group(N, +, inverse, 0)