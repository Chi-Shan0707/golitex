import "../../Std/Seq"

prop is_identical_seq(a seq(R)):
    forall n,m N => a(n) = a(m)

prop is_alternating_seq_and_has_bound(a seq(R), bound R):
    bound > 0
    forall n N => a(n) = -a(n+1), abs(a(n)) <= bound

prop IMO_2024_A5_Condition(a seq(R)):
    forall n N => a(n+2) + a(n) * a(n) = a(n) + a(n+1) * a(n+1), abs(a(n+1) - a(n)) <= 1
    $Seq::periodic(a)

know forall a seq(R), s seq(R), d seq(R):
    $IMO_2024_A5_Condition(a)
    forall n N => s(n) = a(n+1) + a(n), d(n) = a(n+1) - a(n)
    then:
        forall n N => s(n+1) = s(n) * (1 + d(n)), d(n+1) = d(n) * (s(n) - 1), abs(d(n)) <= 1
