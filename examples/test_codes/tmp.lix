# Formalize Terence Tao Analysis 1 Chapter 3 Set Theory

# Definition of Two Sets are Equal
know forall x, y set:
	x = y
    then:
        forall a x:
            a $in y
        forall a y:
            a $in x

# Definition of Empty Set
prop is_empty_set(x set):
    forall a obj:
        not a $in x

# There is a builtin-in empty set in Litex
have builtin_empty_set := {}
forall x obj:
    not x $in builtin_empty_set

exist_prop x obj st obj_exist_in_set(s set):
    x $in s

# There is just one empty set
claim:
    forall s set:
        not $is_empty_set(s)
        then:
           $obj_exist_in_set(s)
    prove_by_contradiction:
        forall x obj:
            not x $in s
        $is_empty_set(s)
        
# You can define a finite set of items like this:
have set_of_one_two_three := {1, 2, 3}

# Pairwise Union
fn union(s1 set, s2 set) set
prop obj_in_union_is_in_one_of_the_sets(s1 set, s2 set, x obj):
    or:
        x $in s1
        x $in s2
        

know:
    forall s1, s2 set, x s1:
    	x $in union(s1, s2) 
    forall s1, s2 set, x s2:
    	x $in union(s1, s2) 
    forall s1, s2 set, x union(s1, s2):
        $obj_in_union_is_in_one_of_the_sets(s1, s2, x)

# {a, b} = {a} \union {b}
claim:
	forall a, b obj, s1, s2, x obj:
        s1 := {a}
        s2 := {b}
        x $in union(s1, s2)
        then:
            or:
                x = a
                x = b
    prove:
        $obj_in_union_is_in_one_of_the_sets(s1, s2, x)
        prove_in_each_case:
            or:
                x $in s1
                x $in s2
            then:
                or:
                	x = a
                    x = b
            prove:
                x $in s1
                x = a
            prove:
                x $in s2
                x = b

prop is_subset_of(s1 set, s2 set):
    forall x s1:
        x $in s2

prove:
    have a := {1, 2, 4}
    have b := {1, 2, 3, 4, 5}
    prove_over_finite_set:
        forall x a:
            x $in b
    a $is_subset_of b