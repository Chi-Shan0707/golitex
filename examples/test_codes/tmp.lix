"""
fn f(x, y R) R:
    x > 1
    y > 1
    then:
    	f(x, y) = x + y

prop p(x, y R):
    x > 1
    y > 1
    iff:
        p(x, y) = x + y

forall x, y R:
    x > 1
    y > 1
    then:
        p(x, y) = x + y

forall x, y R:
    dom:
        x > 1
        y > 1
    then:
        p(x, y) = x + y
    iff:
        p(x, y) = x + y

obj x R, y R:
    x > 0

exist_prop x, y R st q(z R):
    z > 0
    iff:
    	z = x + y

know:
    forall x, y, z N:
        logBase(z, x^(y+1234 * asdf)) = y * logBase(z, x)
        logBase(z, x*y) = logBase(z, x) + logBase(z, y)

know:
    forall x, y, z N:
        logBase(z, x^(y+1234 * asdf)) = y * logBase(z, x)
        logBase(z, x*y) = logBase(z, x) + logBase(z, y)

    forall x N:
        x != 0
        then:
            logBase(x, x) = 1

prove:
	1^(1234 * asdf + 124) = 1
    2 = 2

1^(1234 * asdf + 124) = 1
2 = 2

prop p(x, y R):
    x > 1
    y > 1
    iff:
        p(x, y) = x + y

fn f(x, y R) R:
    x > 1
    y > 1
    then:

"""

"""
fn_template f(x, y R) R:
    x > 1
    y > 1
    then:
        f(x, y) = x + y

fn_template fn_R_R_R(x, y R) R # equivalent to fn f(x, y R) R
"""

# definition of a group, and prove R and Z are groups
# 定义一个群，并证明 R 和 Z 是群

prop is_group(s set, mul fn(s, s)s, inv fn(s)s, e s):
    forall x s, y s, z s:
        mul(mul(x, y), z) = mul(x, mul(y, z))
    forall x s:
        mul(x, inv(x)) = e
        mul(inv(x), x) = e

fn inverse(x R)R:
    inverse(x) + x = 0

forall x R:
    inverse(x) + x = 0
    x + inverse(x) = 0

forall x Z:
    x + inverse(x) = 0
    inverse(x) = -x
    -x $in Z
    inverse(x) $in Z

$is_group(R, +, inverse, 0)
$is_group(Z, +, inverse, 0)
