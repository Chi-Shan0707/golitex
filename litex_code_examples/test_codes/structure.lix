prove:
    structure Group(G set, id G, mul fn(G, G) G, inv fn(G) G):
        dom:
            # ...
        iff:
            IsGroup(G, id, mul, inv)

    prop IsGroup(G set, id G, mul fn(G, G) G, inv fn(G) G):
            forall x, y, z in G:
                mul(x, mul(y, z)) = mul(mul(x, y), z)
            forall x in G:
                mul(x, id) = x
            forall x in G:
                mul(x, inv(x)) = id
            forall x in G:
                mul(inv(x), x) = id
            forall x in G:
                mul(x, inv(x)) = id

    # 因为通常 G, id, mul, inv 不会同时出现在specfact里，所以普通的 match 的方式是不工作的；那为了让 G, id, mul, inv 同时能被解释器知道是哪个，需要额外的方式。比如像这里用特殊的forall，这种forall专门match claim <>

    know forall <Group(G, id, mul, inv)>, x G, y G: 
            mul(x, y) = mul(y, x)

    claim forall <Group(G, id, mul, inv)> x G, y G:
        mul(x, y) = mul(y, x)
