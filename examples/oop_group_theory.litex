import <set_theory> as set; // 可能存在很多的 set_theory的implement，这时你为了确认是哪个，得给他们分别取名

concept group G{
  G is set;

  static relation =(x, y: all x,y are group) {
    if x,y: all x,y are group, x group::= y {y group::= x};
    if x,y: all x,y are group, y group::= x {x group::= y};
    
    // = is transitive;
    // = is reflective;
  }

  relation =(x,y: all x,y are set::G.has) {
    = is transitive;
    = is reflective;
  }

  opt *(x,y: all x,y,z are set::G.has) => var result {
    (x * y) * z G::= x * (y * z);
    set::G.has(result);
  }

  var 1 {
    set::G.has(1);
    if x: set::G.has(x) {
      x * 1 G::= x;
      1 * x G::= x;
    };
  }

  opt inv(x: set::G.has(x)) => var result {
    result * x G::= G.1;
    x * result G::= G.1;
  }
}