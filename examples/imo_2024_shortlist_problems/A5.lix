# A5 is on page 22 of https://www.imo-official.org/problems/IMO2024SL.pdf

# Prior knowledge:
# 1. AM-GM inequality
know @AM_GM_inequality(a seq(R), n N):
	forall k N:
    	a(k) >= 0
    then:
    	seq_sum(a, n) / (n+1) >= (seq_product(a, n))^(1/(n+1))

# 2. Periodic sequence
exist_prop period N st seq_periodic(a seq(R)):
    period > 0
    forall k N:
        a(k) = a(k+period)

# 3. Product of first k items of finite sequence
fn product_of_first_k_items_of_finite_seq(k N, m N_pos, a finite_seq(R, m)) R:
    dom:
        k < m
        
know forall k N, m N_pos, a finite_seq(R, m):
    k < m - 1
    then:
        product_of_first_k_items_of_finite_seq(k+1, m, a) = product_of_first_k_items_of_finite_seq(k, m, a) * a(k+1)
        
know forall m N_pos, a finite_seq(R, m):
    product_of_first_k_items_of_finite_seq(0, m, a) = a(0)

# 4. Telescoping product is 1 (could be proved by induction)
know @telescoping_product(m N_pos, a finite_seq(R, m), b finite_seq(R, m), c finite_seq(R, m)):
    forall k N:
        k < m
        then:
        	b(k) != 0
    forall k N:
    	k < m - 1
        then:
        	a(k) = b(k+1)
    a(m-1) = b(0) 
    forall k N:
    	k < m
        then:
        	c(k) = a(k) / b(k)
    then:
        product_of_first_k_items_of_finite_seq(m - 1, m, c) = 1

# Independent Proof Segments
prop is_identical_seq(a seq(R)):
    forall n,m N:
        a(n) = a(m)

prop is_alternating_seq_and_has_bound(a seq(R), bound R):
    bound > 0
    forall n N:
        a(n) = -a(n+1)
        abs(a(n)) <= bound

claim:
    forall x, y, z R:
        x + z * z = z + y * y
        then:
            x + y = (y + z) * (y - z + 1)
    prove:
        =:
            (y + z) * (y - z + 1)
            z + y * y + y - z * z
            x + z * z  + y - z * z
            x + y

exist_prop n N st exist_two_consecutive_items_whose_sum_is_0(a seq(R)):
    a(n) + a(n+1) = 0

prop two_consecutive_items_of_seq_are_0(a seq(R), n N):
    a(n) + a(n+1) = 0

claim:
    forall a seq(R), index N, n N:
        a(n+2) + a(n) * a(n) = a(n) + a(n+1) * a(n+1)
        a(index) + a(index+1) = 0
        then:
        	forall k N:
                k > index
                then:
                	a(k) = 0
    prove:
        know forall k N:
            k > index
            then:
                a(k) = 0


know @periodic_seq_which_is_0_since_n_is_always_0(a seq(R), n N):
    forall m N:
    	m > n
        then:
        	a(m) = 0
    $seq_periodic(a)
    then:
        forall k N:
        	a(k) = 0

claim:
    forall a seq(R):
        forall k N:
        	a(k) = - a(k+1)
            abs(a(k+1) - a(k)) <= 1
        then:
            forall k N:
                abs(a(k)) <= 1/2
    prove:
        claim:
            abs(a(0)) <= 1/2
            prove_by_contradiction:
                abs(a(0)) > 1/2
                a(0) = - a(0+1)
                -a(0) = a(1)
                =:
                    a(1) - a(0) 
                    -a(0) - a(0)
                    -2 * a(0)
                =:
                    abs(a(1) - a(0)) 
                    abs(-2 * a(0))
                    abs(-2) * abs(a(0))
                    2 * abs(a(0))
                2 * abs(a(0)) > 2 * (1/2)
                abs(a(1) - a(0)) > 1
                not abs(a(1) - a(0)) <= 1
                abs(a(0+1) - a(0)) <= 1
        
        prop a_n_has_abs_less_than_1_div_2(a seq(R), n N):
            abs(a(n)) <= 1/2
        
        claim:
            forall n N:
                $a_n_has_abs_less_than_1_div_2(a, n)
                then:
                    $a_n_has_abs_less_than_1_div_2(a, n+1)
            prove:
                a(n) = - a(n+1)
                abs(a(n)) <= 1/2
                =:
                    abs(a(n))
                    abs(-a(n))
                    abs(a(n+1))
                abs(a(n+1)) <= 1/2
                $a_n_has_abs_less_than_1_div_2(a, n+1)

        prove_by_math_induction($a_n_has_abs_less_than_1_div_2(a, 0), 1, 0)

        forall n N:
            then:
                $a_n_has_abs_less_than_1_div_2(a, n)
                abs(a(n)) <= 1/2

# Problem
claim:
    forall a seq(R), n N:
        a(n+2) + a(n) * a(n) = a(n) + a(n+1) * a(n+1)
        abs(a(n+1) - a(n)) <= 1
    	then:
            or:
                $is_identical_seq(a)
                $is_alternating_seq_and_has_bound(a, 1/2)
    prove:
        a(n+2) + a(n+1) = (a(n+1) + a(n)) * (a(n+1) - a(n) + 1)

        claim:
            forall:
                $exist_two_consecutive_items_whose_sum_is_0(a)
                then:
                    $is_alternating_seq_and_has_bound(a, 1/2)
            prove:
                obj a2 seq(R):
                    forall n N:
                        a2(n) = a(n) + a(n+1)

                have a2_is_0_index st $exist_two_consecutive_items_whose_sum_is_0(a)

                =:
                    0
                    a(a2_is_0_index) + a(a2_is_0_index+1)
                    a2(a2_is_0_index)

                know:
                    forall m N:
                        m > a2_is_0_index
                        then:
                            a2(m) = 0

                    $seq_periodic(a2)

                $periodic_seq_which_is_0_since_n_is_always_0(a2, a2_is_0_index)

                forall k N:
                    =:
                        0   
                        a2(k)
                        a(k) + a(k+1)
                    
                    =:
                        - a(k)
                        0 - a(k)
                        a(k) + a(k+1) - a(k)
                        a(k+1)
                    =:
                        a(k)
                        -1 * (- a(k))
                        -a(k+1)
                    
                know forall n N:
                    a(n) = - a(n+1)
                    abs(a(n+1) - a(n)) <= 1
                	abs(a(n)) <= 1/2

                $is_alternating_seq_and_has_bound(a, 1/2)
                

        claim:
        	forall:
            	not $exist_two_consecutive_items_whose_sum_is_0(a)
                then:
                    $is_identical_seq(a)
            prove:
                know $is_identical_seq(a)

        prove_in_each_case:
        	or:
            	$exist_two_consecutive_items_whose_sum_is_0(a)
                not $exist_two_consecutive_items_whose_sum_is_0(a)
            then:
            	or:
                    $is_alternating_seq_and_has_bound(a, 1/2)
                	$is_identical_seq(a)
            prove:
            	$is_alternating_seq_and_has_bound(a, 1/2)
            prove:
            	$is_identical_seq(a)