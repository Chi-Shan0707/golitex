namespace Nat {
  concept nat(x);

  lets arabic_numeral "^(0|[1-9]\d*)$" : arabic_numeral is nat;

  opt ++(a: a is nat) => var {
    this is nat
  }

  opt =(x,y: all x,y are nat) {
    this is commutative
  }

  know if x: x is nat {not 0 = \++{x}  };
  know if x,y: not x = y {
    not \++{x} = \++{y}
  };

  include "./litex_lib/natural_number.ts";

  know if x: x is nat { \+{0,x} = x, \+{x,0} = x};

  know if x,y: x is nat, y is nat {$ x + y $ = $ y + x $};
  know if x,y,z: x is nat, y is nat, z is nat { \+{\+{x,y},z} = \+{x, \+{y,z} } };
  know if a,b,c: a is nat, b is nat, c is nat, $a + b $ = $ a + c$ {b = c};
}

using Nat.var
using Nat.opt
using Nat