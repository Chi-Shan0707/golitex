exist_prop a R st exist_x_larger_than(x R) :
    iff:
        a > x

# claim spec fact prove
claim:
    $exist_x_larger_than(1)
    prove:
        exist 2 st $exist_x_larger_than(1)
        
$exist_x_larger_than(1)
        
have a st $exist_x_larger_than(1)
a $in R
a > 1

know forall x R,  y R:
    x > 0
    then:
        x + y > y
        y + x > y

# claim forall prove
claim:
    forall x R:
        $exist_x_larger_than(x)
    prove:
        exist x + 1 st $exist_x_larger_than(x)

obj x R:
    1 >= x

know forall x R, y R:
    not x < y
    iff:
        x >= y

know forall x R, y R:
    x > y
    then:
        not y >= x

know prop larger_equal_is_transitive(x R, y R, z R):
    x >= y
    y > z
    iff:
        x > z

# claim spec fact prove by contradiction
claim:
    x < 2
    prove_by_contradiction:
        x >= 2
        $larger_equal_is_transitive(x, 2, 1)
        x > 1
        not 1 >= x