# - as prefix opt
prove:
    -1 = -1
    -1 = 1 -2
    -1 = 2 -3
    -1 = 3 -4
    -1 = 4 -5

# +-*/^
prove:
    -1 + 1 = 0
    - 0 =0
    2 - -1 = 3
    #-2 * 4 = -16 /2 
    (-2) * 3 = -6
    (-3)^2 = 9

# < <= > >=
prove:
    1 < 2
    -2 <= 3
    -9 <= -9
    -2 < -1

# match
prove:
    know forall x R, y R, z R: # 分配率
        x * (y + z) = x * y + x * z
        (x + y) * z = x * z + y * z
    obj a R
    -4 * a + 5 * a = (-4+5) * a # match -4 with x, 5 with y, a with z
    -4 * a + 5 * a = 1 * a # 1 match -4+5

# user input number literal expression can match known literal expression
# e.g. 3*3 can match 8+1
prove:
    prop p(x R)
    know forall x R:
        $p(x + 3*3)
    obj x R
    $p(x + 3*3)

# Detailed examples

prove:
    0+1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100 = 5050 

prove:
    obj a R
    know:
        a  = 1
    a * 1 =1 # unknown，因为a*1对不上a
    a * 1 = 1 * 1 # true. 因为等于的判断条件是每一位相等，而a=1，1=1，每一位对应上了
    a * 1 = 1 # true. 因为1*1能匹配1。如果涉及到的元素都是Number literal，则可以自动匹配

"""
fn sin(x R) R
fn cos(x R) R

prove:
    know forall x R:
        sin(x)^2 + cos(x)^2 = 1

    forall y R:
        1 = sin(y)^2 + cos(y)^2
            
    sin(2)^2 + cos(2)^2 = 1
"""

prove:
    1 * 2 * (3 + 4) = 1 * 2 * 3 + 1 * 2 * 4
    (1 + 2) * (3 + 4) = 1 * 3 + 1 * 4 + 2 * 3 + 2 * 4


"""

prove:
    2 % 2 = 0
    3 % 2 = 1
    4 % (-2) = 0
    (-4) % 3 = 2
    4 % (-3) = -2
    (-5) % (-3) = -2

"""

prove:
    1 + 1 = 2