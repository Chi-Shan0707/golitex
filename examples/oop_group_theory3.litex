package group_theory

import ("set_theory")

concept Group G {
  relation =(x G, y G) {
    = is transitive;
    = is reflective;
  }

  fn *(x G, y G) var G {
    if z G: {
      (x * y) * z = x * (y * z)
    }
  }

  var 1 G {
    if x G: {x * 1 = x; x = 1 * x;}
  }

  fn inv(x G) var G {
    \inv(x) * x = 1; // can be deduced that = means G.=
    x * \inv(x) = 1;
  }
}

