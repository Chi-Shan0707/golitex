prove:
    know:
        $p(x,y)
        $q(x,y)
    
    or:
        not $q(x,y)
        $p(x,y)
    
    or:
        not $p(x,y)
        $q(x,y)

    or:
        not $p(x,y)
        not $q(x,y)

    or:
        not $p(x,y)
        not $q(x,y)
        
    and:
        $p(x,y)
        1 + 1 = 2

    or:
        1 + 2 = 4
        and:
            not $p(x,y)
            1 + 1 = 2

    and:
        not $p(x,y)
        1 + 1 = 2

prove:
    know:
        or:
            $p(x,y)
            $q(x,y)
        
        not $p(x,y)

    $q(x,y)

# find bug
prove:
    know:
        or:
            $p(x,y)
            $q(x,y)

    or:
        $p(x,y)
        $q(x,y)

prove:
    set s :
        forall x s:
            or:
                x = 1
                x = 2
                x = 3

    know:
        $p(1)
        $p(2)
        $p(3)

    claim:
        forall x s:
            $p(x)
        prove:
            prove_in_each_case:
                or:
                    x = 1
                    x = 2
                    x = 3
                then:
                    $p(x)
                prove:
                    $p(1)
                prove:
                    $p(2)
                prove:
                    $p(3)
prove:
    or:
        or:
            or:
                $p(x)
                $q(x)
            or:
                $p(x)
                $q(x)
        and:
            $p(x)
            $q(x)

prove:
    know:
        or:
            or:
                $p(x)
                $q(x)
            $t(x)
    
    prove_in_each_case:
        or:
            or:
                $p(x)
                $q(x)
            $t(x)
        then:
            or:
                $p(x)
                $q(x)
                $t(x)
        prove:
            know:
                or:
                    $p(x)
                    $q(x)
                    $t(x)
        prove:
            know:
                or:
                    $p(x)
                    $q(x)
                    $t(x)

# unknown
prove:
    know:
        or:
            or:
                $p(x)
                $q(x)
            $t(x)
    
    or:
        or:
            $p(x)
            $q(x)
        $t(x)
    
    
prove:
    prop A(x X):
        iff:
            or:
                $p(x)
                $q(x)
    know:
        or:
            $A(x)
            $t(x)
    
    or:
        $A(x)
        $t(x)
    
    prove_in_each_case:
        or:
            $A(x)
            $t(x)
        then:
            or:
                $p(x)
                $q(x)
                $t(x)
        prove:
            $A(x)
            or:
                $p(x)
                $q(x)
            prove_in_each_case:
                or:
                    $p(x)
                    $q(x)
                then:
                    or:
                        $p(x)
                        $q(x)
                        $t(x)
                prove:
                    $p(x)
                prove:
                    $q(x)
            or:
                $p(x)
                $q(x)
                $t(x)
                
        prove:
            $t(x)

prove:
    know:
        or:
            $p(x)
            $q(x)

    or:
        $p(x)
        $q(x)
        $t(x)
    # 本质遇到的问题是，如果说现在这个and-or 式子可以写成 F(p1,p2,p3,p4...,pm) 而我们发现 G(p1,p2,p3,p4...,pn) => F(p1,p2,p3,p4...) , 那么我们就可以证明这个式子是true