"""
Chapter 8
"""

# Theorem 8.1
exist_prop s2 set st is_cyclic_group_of_order_m_divided_by_d(s set, op fn(s, s)s, e s, inv fn(s)s, x s, d N):
    $is_cyclic_group(s, op, e, inv, x)
    len(s) / d = 0
    iff:
        $is_cyclic_group(s2, op, e, inv, order_of_item(s, op, e, inv, x, d))
        len(s2) = m / d

know forall a Z, b Z, d Z, s set, op fn(s, s)s, e s, inv fn(s)s, x s:
    $is_cyclic_group(s, op, e, inv, x)
    order_of_item(s, op, e, inv, x, a*d) = order_of_item(s, op, e, inv, x, b * d)
    then:
        da - db % len(s) = 0

exist_prop s2 set st is_cyclic_group_of_order_m_divided_by_d(s set, op fn(s, s)s, e s, inv fn(s)s, x s, d N):
    $is_cyclic_group(s, op, e, inv, x)
    len(s) % d = 0
    iff:
        $is_cyclic_group(s2, op, e, inv, order_of_item(s, op, e, inv, x, d))
        len(s2) = m / d

# Corollary 8.1
know forall n Z, s set, op fn(s, s)s, e s, inv fn(s)s, x s:
    $is_cyclic_group(s, op, e, inv, x)
    then:
        $is_cyclic_group(s, op, e, inv, x)
        forall s2 set, op2 fn(s2, s2)s2, e2 s2, inv2 fn(s2)s2:
            $is_cyclic_group(s2, op2, e2, inv2, x)
            len(s) = len(s2)
            then:
                s = s2

# Corollary 8.2
# x^a generates d = len(m/a) subgroup inside cyclic group of order m iff (a, m) = d
know forall a Z, m Z, s set, op fn(s, s)s, e s, inv fn(s)s, x s:
    $is_cyclic_group(s, op, e, inv, x)
    len(s) = m
    $is_cyclic_group(subgroup_generated_by_item(s, op, e, inv, order_of_item(s, op, e, inv, x, a)), op, e, inv)
    iff:
        gcd(a, m) = len(m/a)

# Corollary 8.3
# x^a generates s iff (a, m) = 1
know forall a Z, m Z, s set, op fn(s, s)s, e s, inv fn(s)s, x s:
    $is_cyclic_group(s, op, e, inv, x)
    len(s) = m
    $is_cyclic_group(subgroup_generated_by_item(s, op, e, inv, order_of_item(s, op, e, inv, x, a)), op, e, inv)
    iff:
        gcd(a, m) = 1

# Corollary 8.4
# When we have fn_set as syntax sugar, this is pretty easy.
fn primes_to_m(m N) finite_set:
    m > 0
        
know:
    forall x N, m N:
        x $in primes_to_m(m)
        then:
            x > 0
            gcd(x, m) = 1

    forall m N, x prime(m):
        x > 0
        gcd(x, m) = 1

fn sum_of_finite_set(s finite_set, n N) R:
    forall x s:
        x $in R
    then:
        sum_of_finite_set(s, n + 1) = sum_of_finite_set(s, n) + s[n+1]

know forall m N:
    m > 0
    then:
        sum_of_finite_set(primes_to_m(m), len(primes_to_m(m))) = m

# Definition 8.1
# If G is a group, H is subgroup of G, every set of form xH with x in G is called a left coset of H in G.
fn left_coset(s set, op fn(s, s)s, e s, inv fn(s)s, x s, s2 set) set:
    dom:
        $is_subgroup(s, op, e, inv, s2)

# TODO 

# Lemma 8.1
prop have_no_common_item(s1 set, s2 set):
    forall x s1, y s2:
        x != y

know forall s set, op fn(s, s)s, e s, inv fn(s)s, x s, y s, s2 set:
    then:
        or:
            left_coset(s, op, e, inv, x, s2) = left_coset(s, op, e, inv, y, s2)
            $have_no_common_item(left_coset(s, op, e, inv, x, s2), left_coset(s, op, e, inv, y, s2))

# Theorem 8.2
know prop subgroup_of_finite_group_has_order_dividing_order_of_group(s set, op fn(s, s)s, e s, inv fn(s)s, s2 set):
    $is_subgroup(s, op, e, inv, s2)
    $is_finite_group(s, op, e, inv)
    then:
        len(s2) % len(s) = 0

