package group_theory

import ("set_theory")

concept Group G extends Set {
  fn *(x G, y G) var G {
    * is commutative;
  }

  var 1 G {
    if x G: {x * 1 = x; x = 1 * x;}
  }

  fn inv(x G) var G {
    \inv(x) * x = G.1;
    x * \inv(x) = G.1;
  }
}

